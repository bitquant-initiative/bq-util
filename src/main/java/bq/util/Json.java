/*
 * This source file was generated by the Gradle 'init' task
 */
package bq.util;


import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.google.common.io.Closer;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;

public class Json {

  static ObjectMapper MAPPER = new ObjectMapper();

  public static ObjectMapper mapper() {
    return MAPPER;
  }

  public static JsonNode readTree(File f) {
    try (Closer c = Closer.create()) {
      FileInputStream fis = new FileInputStream(f);
      c.register(fis);
      return readTree(fis);
    } catch (IOException e) {
      throw new BqException(e);
    }
  }

  public static JsonNode readTree(String input) {

    try {
      return MAPPER.readTree(input);
    } catch (JsonProcessingException e) {
      throw new BqException(e);
    }
  }

  public static JsonNode readTree(InputStream input) {

    try {
      return MAPPER.readTree(input);
    } catch (IOException e) {
      throw new BqException(e);
    }
  }

  public static JsonNode readTree(Reader input) {

    try {
      return MAPPER.readTree(input);
    } catch (IOException e) {
      throw new BqException(e);
    }
  }

  public static JsonNode readTree(byte[] input) {

    try {
      return MAPPER.readTree(input);
    } catch (IOException e) {
      throw new BqException(e);
    }
  }

  public static ObjectNode createObjectNode() {
    return MAPPER.createObjectNode();
  }

  public static ArrayNode createArrayNode() {
    return MAPPER.createArrayNode();
  }
}
